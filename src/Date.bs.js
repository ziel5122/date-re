// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");
var Day$DateRe = require("./Day.bs.js");
var Year$DateRe = require("./Year.bs.js");
var Month$DateRe = require("./Month.bs.js");

function print_date(date) {
  return Curry._4(Printf.printf(/* Format */[
                  /* Int */Block.__(4, [
                      /* Int_d */0,
                      /* No_padding */0,
                      /* No_precision */0,
                      /* Char_literal */Block.__(12, [
                          /* " " */32,
                          /* String */Block.__(2, [
                              /* No_padding */0,
                              /* Char_literal */Block.__(12, [
                                  /* " " */32,
                                  /* Int */Block.__(4, [
                                      /* Int_d */0,
                                      /* No_padding */0,
                                      /* No_precision */0,
                                      /* Char_literal */Block.__(12, [
                                          /* " " */32,
                                          /* Int */Block.__(4, [
                                              /* Int_d */0,
                                              /* No_padding */0,
                                              /* No_precision */0,
                                              /* Char_literal */Block.__(12, [
                                                  /* "\n" */10,
                                                  /* End_of_format */0
                                                ])
                                            ])
                                        ])
                                    ])
                                ])
                            ])
                        ])
                    ]),
                  "%d %s %d %d\n"
                ]), date[/* year */0], Month$DateRe.toString(date[/* month */1]), date[/* day */2], date[/* hour */3]);
}

function timeDifference(d0, d1) {
  var rawHourDifference = d0[/* hour */3] - d1[/* hour */3] | 0;
  var match = rawHourDifference < 0 ? /* tuple */[
      (d0[/* day */2] - d1[/* day */2] | 0) - 1 | 0,
      rawHourDifference + Day$DateRe.numHours | 0
    ] : /* tuple */[
      d0[/* day */2] - d1[/* day */2] | 0,
      rawHourDifference
    ];
  var rawDayDifference = match[0];
  var match$1 = rawDayDifference < 0 ? /* tuple */[
      (Month$DateRe.index(d0[/* month */1]) - Month$DateRe.index(d1[/* month */1]) | 0) - 1 | 0,
      rawDayDifference + Month$DateRe.numDays(d1[/* month */1]) | 0
    ] : /* tuple */[
      Month$DateRe.index(d0[/* month */1]) - Month$DateRe.index(d1[/* month */1]) | 0,
      rawDayDifference
    ];
  var rawMonthDifference = match$1[0];
  var match$2 = rawMonthDifference < 0 ? /* tuple */[
      (d0[/* year */0] - d1[/* year */0] | 0) - 1 | 0,
      rawMonthDifference + Year$DateRe.numMonths | 0
    ] : /* tuple */[
      d0[/* year */0] - d1[/* year */0] | 0,
      rawMonthDifference
    ];
  return /* record */[
          /* years */match$2[0],
          /* months */match$2[1],
          /* days */match$1[1],
          /* hours */match[1]
        ];
}

exports.print_date = print_date;
exports.timeDifference = timeDifference;
/* No side effect */
